name: Deploy to EC2

on:
  push:
    branches:
      - dev
      - main

concurrency:
  group: deploy-ec2
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js and pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🧩 Install dependencies
        run: |
          pnpm install
          cd apps/client && pnpm install && cd ../..
          cd apps/server && pnpm install && cd ../..

      - name: ⚙️ Build client and server
        run: |
          cd apps/client
          pnpm build
          cd ../..

          cd apps/server
          pnpm db:g
          pnpm build
          cd ../..

      - name: 📦 Upload client dist
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/client/dist/*"
          target: "~/full-stack-portfolio/apps/client/dist/"
          strip_components: 3
          overwrite: true

      # SERVER — upload dist
      - name: 📦 Upload server dist
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/dist/*"
          target: "~/full-stack-portfolio/apps/server/dist/"
          strip_components: 3
          overwrite: true

      # SERVER — upload prisma folder
      - name: 📦 Upload prisma folder
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/prisma/*"
          target: "~/full-stack-portfolio/apps/server/prisma/"
          strip_components: 3
          overwrite: true

      # SERVER — upload package.json
      - name: 📦 Upload server package.json
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/package.json"
          target: "~/full-stack-portfolio/apps/server/"
          strip_components: 2
          overwrite: true

      # 🔁 Restart services and install only what’s needed
      - name: 🚀 Restart backend and finalize
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            cd ~/full-stack-portfolio/apps/server
            echo "📦 Installing only production deps"
            pnpm install
            echo "🧬 Generating Prisma client"
            pnpm db:g
            echo "🔁 Restarting backend service..."
            if [ "${{ github.ref_name }}" = "main" ]; then
              sudo systemctl restart backend
            elif [ "${{ github.ref_name }}" = "dev" ]; then
              sudo systemctl restart dev-backend
            fi

            echo "✅ Deployment completed successfully!"
