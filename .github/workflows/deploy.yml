name: Deploy to EC2

on:
  push:
    branches:
      - dev
      - main

concurrency:
  group: deploy-ec2
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js and pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🧩 Install dependencies
        run: |
          pnpm install
          cd apps/client && pnpm install && cd ../..
          cd apps/server && pnpm install && cd ../..

      - name: ⚙️ Build client and server
        run: |
          cd apps/client
          pnpm build
          cd ../..

          cd apps/server
          pnpm prisma generate
          pnpm build
          cd ../..

      - name: 🧹 Reset EC2 repo to clean state
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/full-stack-portfolio
            git fetch origin
            git reset --hard origin/${{ github.ref_name }}
            git clean -fd

      - name: 📦 Replace client dist
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/client/dist/*"
          target: "~/full-stack-portfolio/apps/client/dist/"
          overwrite: true

      - name: 📦 Replace server dist
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/dist/** apps/server/node_modules/** apps/server/package.json"
          target: "~/full-stack-portfolio/apps/server/"
          overwrite: true

      - name: 📦 Replace server node_modules
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/node_modules/**"
          target: "~/full-stack-portfolio/apps/server/node_modules/"
          overwrite: true

      - name: 📦 Replace server package.json
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "apps/server/package.json"
          target: "~/full-stack-portfolio/apps/server/"
          overwrite: true

      - name: 🚀 Restart backend service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e

            cd full-stack-portfolio

            # Only restart the service - no rebuilding needed!
            if [ "${{ github.ref_name }}" = "main" ]; then
              echo "🔁 Restarting production backend..."
              sudo systemctl restart backend
            elif [ "${{ github.ref_name }}" = "dev" ]; then
              echo "🔁 Restarting development backend..."
              sudo systemctl restart dev-backend
            fi

            echo "✅ Deployment completed"
