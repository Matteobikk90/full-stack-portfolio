name: Deploy to EC2 via Registry

on:
  push:
    branches: [main, dev]

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-ec2
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      IMAGE_TAG: ${{ github.sha }}
      REGISTRY: ghcr.io/matteobikk90
      FOLDER: full-stack-portfolio

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üê≥ Build client image
        run: |
          docker build -t $REGISTRY/$FOLDER-client:$IMAGE_TAG -f apps/client/Dockerfile apps/client

      - name: üê≥ Build server image
        run: |
          SERVER_SUFFIX=$( [ "${{ github.ref_name }}" = "main" ] && echo "prod" || echo "dev" )
          docker build -t $REGISTRY/$FOLDER-server-$SERVER_SUFFIX:$IMAGE_TAG -f apps/server/Dockerfile apps/server

      - name: üì§ Push images to registry
        run: |
          docker push $REGISTRY/$FOLDER-client:$IMAGE_TAG

          SERVER_SUFFIX=$( [ "${{ github.ref_name }}" = "main" ] && echo "prod" || echo "dev" )
          docker push $REGISTRY/$FOLDER-server-$SERVER_SUFFIX:$IMAGE_TAG

      - name: üöÄ Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            REGISTRY=ghcr.io/matteobikk90
            FOLDER=full-stack-portfolio
            TAG=${{ github.sha }}

            if [ "${{ github.ref_name }}" = "main" ]; then
              SERVICE_NAME="server-prod"
            else
              SERVICE_NAME="server-dev"
            fi

            echo "üì• Pulling images from GHCR..."
            docker pull $REGISTRY/$FOLDER-client:$TAG
            docker pull $REGISTRY/$FOLDER-$SERVICE_NAME:$TAG

            echo "üöÄ Starting containers..."
            cd ~/full-stack-portfolio
            GITHUB_SHA=$TAG docker compose up -d $SERVICE_NAME client

            echo "üßπ Cleaning unused Docker resources..."
            docker system prune -af --volumes
