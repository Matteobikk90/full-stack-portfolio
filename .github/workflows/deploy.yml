name: Deploy to EC2 via Registry

on:
  push:
    branches: [main, dev]

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-ec2
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      IMAGE_TAG: ${{ github.sha }}
      REGISTRY: ghcr.io/matteobikk90
      FOLDER: full-stack-portfolio

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build client image
        run: |
          VITE_PROXY_TARGET=$([ "${{ github.ref_name }}" = "main" ] && echo "https://matteosoresini.com" || echo "http://localhost:4001")
          docker build \
            --build-arg VITE_PROXY_TARGET=$VITE_PROXY_TARGET \
            -t $REGISTRY/$FOLDER-client:$IMAGE_TAG \
            -f apps/client/Dockerfile apps/client

      - name: 🐳 Build server image
        run: |
          SERVER_SUFFIX=$( [ "${{ github.ref_name }}" = "main" ] && echo "prod" || echo "dev" )
          docker build -t $REGISTRY/$FOLDER-server-$SERVER_SUFFIX:$IMAGE_TAG -f apps/server/Dockerfile apps/server

      - name: 📤 Push images to registry
        run: |
          docker push $REGISTRY/$FOLDER-client:$IMAGE_TAG

          SERVER_SUFFIX=$( [ "${{ github.ref_name }}" = "main" ] && echo "prod" || echo "dev" )
          docker push $REGISTRY/$FOLDER-server-$SERVER_SUFFIX:$IMAGE_TAG

      - name: 🚀 Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          envs: GITHUB_SHA,GITHUB_REF_NAME
          script: |
            set -e
            REGISTRY=ghcr.io/matteobikk90
            FOLDER=full-stack-portfolio
            TAG=$GITHUB_SHA

            if [ "$GITHUB_REF_NAME" = "main" ]; then
              IMAGE_ENV="prod"        
              ENV="production"        
              SERVER_PORT="4000"
              cp ~/full-stack-portfolio/nginx/conf.d/prod.conf ~/full-stack-portfolio/nginx/conf.d/default.conf
            else
              IMAGE_ENV="dev"         
              ENV="development"       
              SERVER_PORT="4001"
              cp ~/full-stack-portfolio/nginx/conf.d/dev.conf ~/full-stack-portfolio/nginx/conf.d/default.conf
            fi

            echo "📥 Pulling images from GHCR..."
            docker pull $REGISTRY/$FOLDER-client:$TAG
            docker pull $REGISTRY/$FOLDER-server-$IMAGE_ENV:$TAG

            echo "🛑 Stopping existing containers..."
            cd ~/full-stack-portfolio
            docker compose down || true

            CONTAINERS=$(docker ps -q --filter "publish=80" --filter "publish=4000" --filter "publish=4001")
            [ -n "$CONTAINERS" ] && docker stop $CONTAINERS || true

            echo "🚀 Starting containers..."
            cd ~/full-stack-portfolio
            echo "GITHUB_SHA=$TAG" > .env
            echo "ENV=$ENV" >> .env
            echo "IMAGE_ENV=$IMAGE_ENV" >> .env
            echo "SERVER_PORT=$SERVER_PORT" >> .env
            docker compose up -d

            echo "🧹 Cleaning unused Docker resources..."
            docker image prune -af --filter "until=72h"
            docker container prune -f
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
