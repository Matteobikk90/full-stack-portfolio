/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as ContactImport } from './routes/contact';
import { Route as IndexImport } from './routes/index';
import { Route as PrivacyPolicyImport } from './routes/privacy-policy';
import { Route as ProjectsImport } from './routes/projects';
import { Route as ResumeAboutImport } from './routes/resume/about';
import { Route as ResumeExperienceImport } from './routes/resume/experience';
import { Route as ResumeIndexImport } from './routes/resume/index';
import { Route as ResumeTechStackImport } from './routes/resume/tech-stack';
import { Route as TermsOfServiceImport } from './routes/terms-of-service';

// Create/Update Routes

const TermsOfServiceRoute = TermsOfServiceImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any);

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any);

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any);

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const ResumeIndexRoute = ResumeIndexImport.update({
  id: '/resume/',
  path: '/resume/',
  getParentRoute: () => rootRoute,
} as any);

const ResumeTechStackRoute = ResumeTechStackImport.update({
  id: '/resume/tech-stack',
  path: '/resume/tech-stack',
  getParentRoute: () => rootRoute,
} as any);

const ResumeExperienceRoute = ResumeExperienceImport.update({
  id: '/resume/experience',
  path: '/resume/experience',
  getParentRoute: () => rootRoute,
} as any);

const ResumeAboutRoute = ResumeAboutImport.update({
  id: '/resume/about',
  path: '/resume/about',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/contact': {
      id: '/contact';
      path: '/contact';
      fullPath: '/contact';
      preLoaderRoute: typeof ContactImport;
      parentRoute: typeof rootRoute;
    };
    '/privacy-policy': {
      id: '/privacy-policy';
      path: '/privacy-policy';
      fullPath: '/privacy-policy';
      preLoaderRoute: typeof PrivacyPolicyImport;
      parentRoute: typeof rootRoute;
    };
    '/projects': {
      id: '/projects';
      path: '/projects';
      fullPath: '/projects';
      preLoaderRoute: typeof ProjectsImport;
      parentRoute: typeof rootRoute;
    };
    '/terms-of-service': {
      id: '/terms-of-service';
      path: '/terms-of-service';
      fullPath: '/terms-of-service';
      preLoaderRoute: typeof TermsOfServiceImport;
      parentRoute: typeof rootRoute;
    };
    '/resume/about': {
      id: '/resume/about';
      path: '/resume/about';
      fullPath: '/resume/about';
      preLoaderRoute: typeof ResumeAboutImport;
      parentRoute: typeof rootRoute;
    };
    '/resume/experience': {
      id: '/resume/experience';
      path: '/resume/experience';
      fullPath: '/resume/experience';
      preLoaderRoute: typeof ResumeExperienceImport;
      parentRoute: typeof rootRoute;
    };
    '/resume/tech-stack': {
      id: '/resume/tech-stack';
      path: '/resume/tech-stack';
      fullPath: '/resume/tech-stack';
      preLoaderRoute: typeof ResumeTechStackImport;
      parentRoute: typeof rootRoute;
    };
    '/resume/': {
      id: '/resume/';
      path: '/resume';
      fullPath: '/resume';
      preLoaderRoute: typeof ResumeIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/contact': typeof ContactRoute;
  '/privacy-policy': typeof PrivacyPolicyRoute;
  '/projects': typeof ProjectsRoute;
  '/terms-of-service': typeof TermsOfServiceRoute;
  '/resume/about': typeof ResumeAboutRoute;
  '/resume/experience': typeof ResumeExperienceRoute;
  '/resume/tech-stack': typeof ResumeTechStackRoute;
  '/resume': typeof ResumeIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/contact': typeof ContactRoute;
  '/privacy-policy': typeof PrivacyPolicyRoute;
  '/projects': typeof ProjectsRoute;
  '/terms-of-service': typeof TermsOfServiceRoute;
  '/resume/about': typeof ResumeAboutRoute;
  '/resume/experience': typeof ResumeExperienceRoute;
  '/resume/tech-stack': typeof ResumeTechStackRoute;
  '/resume': typeof ResumeIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/contact': typeof ContactRoute;
  '/privacy-policy': typeof PrivacyPolicyRoute;
  '/projects': typeof ProjectsRoute;
  '/terms-of-service': typeof TermsOfServiceRoute;
  '/resume/about': typeof ResumeAboutRoute;
  '/resume/experience': typeof ResumeExperienceRoute;
  '/resume/tech-stack': typeof ResumeTechStackRoute;
  '/resume/': typeof ResumeIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/contact'
    | '/privacy-policy'
    | '/projects'
    | '/terms-of-service'
    | '/resume/about'
    | '/resume/experience'
    | '/resume/tech-stack'
    | '/resume';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/contact'
    | '/privacy-policy'
    | '/projects'
    | '/terms-of-service'
    | '/resume/about'
    | '/resume/experience'
    | '/resume/tech-stack'
    | '/resume';
  id:
    | '__root__'
    | '/'
    | '/contact'
    | '/privacy-policy'
    | '/projects'
    | '/terms-of-service'
    | '/resume/about'
    | '/resume/experience'
    | '/resume/tech-stack'
    | '/resume/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ContactRoute: typeof ContactRoute;
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute;
  ProjectsRoute: typeof ProjectsRoute;
  TermsOfServiceRoute: typeof TermsOfServiceRoute;
  ResumeAboutRoute: typeof ResumeAboutRoute;
  ResumeExperienceRoute: typeof ResumeExperienceRoute;
  ResumeTechStackRoute: typeof ResumeTechStackRoute;
  ResumeIndexRoute: typeof ResumeIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  ProjectsRoute: ProjectsRoute,
  TermsOfServiceRoute: TermsOfServiceRoute,
  ResumeAboutRoute: ResumeAboutRoute,
  ResumeExperienceRoute: ResumeExperienceRoute,
  ResumeTechStackRoute: ResumeTechStackRoute,
  ResumeIndexRoute: ResumeIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact",
        "/privacy-policy",
        "/projects",
        "/terms-of-service",
        "/resume/about",
        "/resume/experience",
        "/resume/tech-stack",
        "/resume/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/terms-of-service": {
      "filePath": "terms-of-service.tsx"
    },
    "/resume/about": {
      "filePath": "resume/about.tsx"
    },
    "/resume/experience": {
      "filePath": "resume/experience.tsx"
    },
    "/resume/tech-stack": {
      "filePath": "resume/tech-stack.tsx"
    },
    "/resume/": {
      "filePath": "resume/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
