/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';
// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as ResumeImport } from './routes/resume';
import { Route as ResumeExperienceImport } from './routes/resume.experience';
import { Route as ResumeExperienceIdImport } from './routes/resume.experience.$id';
import { Route as ResumeIndexImport } from './routes/resume.index';
import { Route as WorkImport } from './routes/work';

// Create Virtual Routes

const TermsOfServiceLazyImport = createFileRoute('/terms-of-service')();
const PrivacyPolicyLazyImport = createFileRoute('/privacy-policy')();
const ErrorLazyImport = createFileRoute('/error')();
const DeleteDataLazyImport = createFileRoute('/delete-data')();
const ContactLazyImport = createFileRoute('/contact')();
const IndexLazyImport = createFileRoute('/')();
const ResumeSkillsLazyImport = createFileRoute('/resume/skills')();
const ResumeEducationLazyImport = createFileRoute('/resume/education')();
const ResumeAboutLazyImport = createFileRoute('/resume/about')();
const ResumeExperienceIndexLazyImport = createFileRoute(
  '/resume/experience/'
)();

// Create/Update Routes

const TermsOfServiceLazyRoute = TermsOfServiceLazyImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/terms-of-service.lazy').then((d) => d.Route)
);

const PrivacyPolicyLazyRoute = PrivacyPolicyLazyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy').then((d) => d.Route)
);

const ErrorLazyRoute = ErrorLazyImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/error.lazy').then((d) => d.Route));

const DeleteDataLazyRoute = DeleteDataLazyImport.update({
  id: '/delete-data',
  path: '/delete-data',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/delete-data.lazy').then((d) => d.Route));

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route));

const WorkRoute = WorkImport.update({
  id: '/work',
  path: '/work',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/work.lazy').then((d) => d.Route));

const ResumeRoute = ResumeImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const ResumeIndexRoute = ResumeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResumeRoute,
} as any);

const ResumeSkillsLazyRoute = ResumeSkillsLazyImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => ResumeRoute,
} as any).lazy(() =>
  import('./routes/resume.skills.lazy').then((d) => d.Route)
);

const ResumeEducationLazyRoute = ResumeEducationLazyImport.update({
  id: '/education',
  path: '/education',
  getParentRoute: () => ResumeRoute,
} as any).lazy(() =>
  import('./routes/resume.education.lazy').then((d) => d.Route)
);

const ResumeAboutLazyRoute = ResumeAboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => ResumeRoute,
} as any).lazy(() => import('./routes/resume.about.lazy').then((d) => d.Route));

const ResumeExperienceRoute = ResumeExperienceImport.update({
  id: '/experience',
  path: '/experience',
  getParentRoute: () => ResumeRoute,
} as any);

const ResumeExperienceIndexLazyRoute = ResumeExperienceIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResumeExperienceRoute,
} as any).lazy(() =>
  import('./routes/resume.experience.index.lazy').then((d) => d.Route)
);

const ResumeExperienceIdRoute = ResumeExperienceIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ResumeExperienceRoute,
} as any).lazy(() =>
  import('./routes/resume.experience.$id.lazy').then((d) => d.Route)
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/resume': {
      id: '/resume';
      path: '/resume';
      fullPath: '/resume';
      preLoaderRoute: typeof ResumeImport;
      parentRoute: typeof rootRoute;
    };
    '/work': {
      id: '/work';
      path: '/work';
      fullPath: '/work';
      preLoaderRoute: typeof WorkImport;
      parentRoute: typeof rootRoute;
    };
    '/contact': {
      id: '/contact';
      path: '/contact';
      fullPath: '/contact';
      preLoaderRoute: typeof ContactLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/delete-data': {
      id: '/delete-data';
      path: '/delete-data';
      fullPath: '/delete-data';
      preLoaderRoute: typeof DeleteDataLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/error': {
      id: '/error';
      path: '/error';
      fullPath: '/error';
      preLoaderRoute: typeof ErrorLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/privacy-policy': {
      id: '/privacy-policy';
      path: '/privacy-policy';
      fullPath: '/privacy-policy';
      preLoaderRoute: typeof PrivacyPolicyLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/terms-of-service': {
      id: '/terms-of-service';
      path: '/terms-of-service';
      fullPath: '/terms-of-service';
      preLoaderRoute: typeof TermsOfServiceLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/resume/experience': {
      id: '/resume/experience';
      path: '/experience';
      fullPath: '/resume/experience';
      preLoaderRoute: typeof ResumeExperienceImport;
      parentRoute: typeof ResumeImport;
    };
    '/resume/about': {
      id: '/resume/about';
      path: '/about';
      fullPath: '/resume/about';
      preLoaderRoute: typeof ResumeAboutLazyImport;
      parentRoute: typeof ResumeImport;
    };
    '/resume/education': {
      id: '/resume/education';
      path: '/education';
      fullPath: '/resume/education';
      preLoaderRoute: typeof ResumeEducationLazyImport;
      parentRoute: typeof ResumeImport;
    };
    '/resume/skills': {
      id: '/resume/skills';
      path: '/skills';
      fullPath: '/resume/skills';
      preLoaderRoute: typeof ResumeSkillsLazyImport;
      parentRoute: typeof ResumeImport;
    };
    '/resume/': {
      id: '/resume/';
      path: '/';
      fullPath: '/resume/';
      preLoaderRoute: typeof ResumeIndexImport;
      parentRoute: typeof ResumeImport;
    };
    '/resume/experience/$id': {
      id: '/resume/experience/$id';
      path: '/$id';
      fullPath: '/resume/experience/$id';
      preLoaderRoute: typeof ResumeExperienceIdImport;
      parentRoute: typeof ResumeExperienceImport;
    };
    '/resume/experience/': {
      id: '/resume/experience/';
      path: '/';
      fullPath: '/resume/experience/';
      preLoaderRoute: typeof ResumeExperienceIndexLazyImport;
      parentRoute: typeof ResumeExperienceImport;
    };
  }
}

// Create and export the route tree

interface ResumeExperienceRouteChildren {
  ResumeExperienceIdRoute: typeof ResumeExperienceIdRoute;
  ResumeExperienceIndexLazyRoute: typeof ResumeExperienceIndexLazyRoute;
}

const ResumeExperienceRouteChildren: ResumeExperienceRouteChildren = {
  ResumeExperienceIdRoute: ResumeExperienceIdRoute,
  ResumeExperienceIndexLazyRoute: ResumeExperienceIndexLazyRoute,
};

const ResumeExperienceRouteWithChildren =
  ResumeExperienceRoute._addFileChildren(ResumeExperienceRouteChildren);

interface ResumeRouteChildren {
  ResumeExperienceRoute: typeof ResumeExperienceRouteWithChildren;
  ResumeAboutLazyRoute: typeof ResumeAboutLazyRoute;
  ResumeEducationLazyRoute: typeof ResumeEducationLazyRoute;
  ResumeSkillsLazyRoute: typeof ResumeSkillsLazyRoute;
  ResumeIndexRoute: typeof ResumeIndexRoute;
}

const ResumeRouteChildren: ResumeRouteChildren = {
  ResumeExperienceRoute: ResumeExperienceRouteWithChildren,
  ResumeAboutLazyRoute: ResumeAboutLazyRoute,
  ResumeEducationLazyRoute: ResumeEducationLazyRoute,
  ResumeSkillsLazyRoute: ResumeSkillsLazyRoute,
  ResumeIndexRoute: ResumeIndexRoute,
};

const ResumeRouteWithChildren =
  ResumeRoute._addFileChildren(ResumeRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/resume': typeof ResumeRouteWithChildren;
  '/work': typeof WorkRoute;
  '/contact': typeof ContactLazyRoute;
  '/delete-data': typeof DeleteDataLazyRoute;
  '/error': typeof ErrorLazyRoute;
  '/privacy-policy': typeof PrivacyPolicyLazyRoute;
  '/terms-of-service': typeof TermsOfServiceLazyRoute;
  '/resume/experience': typeof ResumeExperienceRouteWithChildren;
  '/resume/about': typeof ResumeAboutLazyRoute;
  '/resume/education': typeof ResumeEducationLazyRoute;
  '/resume/skills': typeof ResumeSkillsLazyRoute;
  '/resume/': typeof ResumeIndexRoute;
  '/resume/experience/$id': typeof ResumeExperienceIdRoute;
  '/resume/experience/': typeof ResumeExperienceIndexLazyRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/work': typeof WorkRoute;
  '/contact': typeof ContactLazyRoute;
  '/delete-data': typeof DeleteDataLazyRoute;
  '/error': typeof ErrorLazyRoute;
  '/privacy-policy': typeof PrivacyPolicyLazyRoute;
  '/terms-of-service': typeof TermsOfServiceLazyRoute;
  '/resume/about': typeof ResumeAboutLazyRoute;
  '/resume/education': typeof ResumeEducationLazyRoute;
  '/resume/skills': typeof ResumeSkillsLazyRoute;
  '/resume': typeof ResumeIndexRoute;
  '/resume/experience/$id': typeof ResumeExperienceIdRoute;
  '/resume/experience': typeof ResumeExperienceIndexLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/resume': typeof ResumeRouteWithChildren;
  '/work': typeof WorkRoute;
  '/contact': typeof ContactLazyRoute;
  '/delete-data': typeof DeleteDataLazyRoute;
  '/error': typeof ErrorLazyRoute;
  '/privacy-policy': typeof PrivacyPolicyLazyRoute;
  '/terms-of-service': typeof TermsOfServiceLazyRoute;
  '/resume/experience': typeof ResumeExperienceRouteWithChildren;
  '/resume/about': typeof ResumeAboutLazyRoute;
  '/resume/education': typeof ResumeEducationLazyRoute;
  '/resume/skills': typeof ResumeSkillsLazyRoute;
  '/resume/': typeof ResumeIndexRoute;
  '/resume/experience/$id': typeof ResumeExperienceIdRoute;
  '/resume/experience/': typeof ResumeExperienceIndexLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/resume'
    | '/work'
    | '/contact'
    | '/delete-data'
    | '/error'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/resume/experience'
    | '/resume/about'
    | '/resume/education'
    | '/resume/skills'
    | '/resume/'
    | '/resume/experience/$id'
    | '/resume/experience/';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/work'
    | '/contact'
    | '/delete-data'
    | '/error'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/resume/about'
    | '/resume/education'
    | '/resume/skills'
    | '/resume'
    | '/resume/experience/$id'
    | '/resume/experience';
  id:
    | '__root__'
    | '/'
    | '/resume'
    | '/work'
    | '/contact'
    | '/delete-data'
    | '/error'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/resume/experience'
    | '/resume/about'
    | '/resume/education'
    | '/resume/skills'
    | '/resume/'
    | '/resume/experience/$id'
    | '/resume/experience/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  ResumeRoute: typeof ResumeRouteWithChildren;
  WorkRoute: typeof WorkRoute;
  ContactLazyRoute: typeof ContactLazyRoute;
  DeleteDataLazyRoute: typeof DeleteDataLazyRoute;
  ErrorLazyRoute: typeof ErrorLazyRoute;
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute;
  TermsOfServiceLazyRoute: typeof TermsOfServiceLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ResumeRoute: ResumeRouteWithChildren,
  WorkRoute: WorkRoute,
  ContactLazyRoute: ContactLazyRoute,
  DeleteDataLazyRoute: DeleteDataLazyRoute,
  ErrorLazyRoute: ErrorLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  TermsOfServiceLazyRoute: TermsOfServiceLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/resume",
        "/work",
        "/contact",
        "/delete-data",
        "/error",
        "/privacy-policy",
        "/terms-of-service"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/resume": {
      "filePath": "resume.tsx",
      "children": [
        "/resume/experience",
        "/resume/about",
        "/resume/education",
        "/resume/skills",
        "/resume/"
      ]
    },
    "/work": {
      "filePath": "work.ts"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/delete-data": {
      "filePath": "delete-data.lazy.tsx"
    },
    "/error": {
      "filePath": "error.lazy.ts"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.lazy.tsx"
    },
    "/terms-of-service": {
      "filePath": "terms-of-service.lazy.tsx"
    },
    "/resume/experience": {
      "filePath": "resume.experience.ts",
      "parent": "/resume",
      "children": [
        "/resume/experience/$id",
        "/resume/experience/"
      ]
    },
    "/resume/about": {
      "filePath": "resume.about.lazy.tsx",
      "parent": "/resume"
    },
    "/resume/education": {
      "filePath": "resume.education.lazy.tsx",
      "parent": "/resume"
    },
    "/resume/skills": {
      "filePath": "resume.skills.lazy.tsx",
      "parent": "/resume"
    },
    "/resume/": {
      "filePath": "resume.index.ts",
      "parent": "/resume"
    },
    "/resume/experience/$id": {
      "filePath": "resume.experience.$id.ts",
      "parent": "/resume/experience"
    },
    "/resume/experience/": {
      "filePath": "resume.experience.index.lazy.tsx",
      "parent": "/resume/experience"
    }
  }
}
ROUTE_MANIFEST_END */
